[{"C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Planner\\components\\Header\\Header.jsx":"1","C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Planner\\components\\DatePicker\\DatePicker.jsx":"2","C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Planner\\Planner.jsx":"3","C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\index.js":"4","C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\App.js":"5","C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\firebase\\firebase.js":"6","C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\contexts\\AuthContexts.jsx":"7","C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\Routes\\PrivateRoute.jsx":"8","C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Registration\\SignUp.jsx":"9","C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Registration\\Login.jsx":"10","C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Registration\\ForgotPassword.jsx":"11","C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Registration\\UpdateProfile.jsx":"12","C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Registration\\components\\ColoredLine.jsx":"13","C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Planner\\components\\Cards\\EditEvent\\EditEvent.jsx":"14","C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Planner\\components\\Cards\\EditEvent\\Input.jsx":"15","C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Planner\\components\\CardContainers\\NewTask\\NewTask.jsx":"16","C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Planner\\components\\CardContainers\\NewTask\\Input.jsx":"17","C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Planner\\components\\Cards\\EditEvent\\ColorPicker.jsx":"18","C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Planner\\components\\CardContainers\\CardContainer.jsx":"19","C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Planner\\components\\Cards\\Cards.jsx":"20","C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Planner\\components\\CardContainers\\ContainerContent.jsx":"21","C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\About\\About.jsx":"22","C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\NavBar\\NavBar.jsx":"23","C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Suggestions\\Suggestions.jsx":"24"},{"size":830,"mtime":1609461592169,"results":"25","hashOfConfig":"26"},{"size":1503,"mtime":1608838078382,"results":"27","hashOfConfig":"26"},{"size":5883,"mtime":1609467767184,"results":"28","hashOfConfig":"26"},{"size":243,"mtime":1608666978957,"results":"29","hashOfConfig":"26"},{"size":1529,"mtime":1609575534435,"results":"30","hashOfConfig":"26"},{"size":562,"mtime":1608665547528,"results":"31","hashOfConfig":"26"},{"size":1819,"mtime":1609566010145,"results":"32","hashOfConfig":"26"},{"size":487,"mtime":1609377692273,"results":"33","hashOfConfig":"26"},{"size":4947,"mtime":1609551483938,"results":"34","hashOfConfig":"26"},{"size":4664,"mtime":1609551475690,"results":"35","hashOfConfig":"26"},{"size":2764,"mtime":1609386093680,"results":"36","hashOfConfig":"26"},{"size":2920,"mtime":1608685277829,"results":"37","hashOfConfig":"26"},{"size":235,"mtime":1608685370276,"results":"38","hashOfConfig":"26"},{"size":1663,"mtime":1609468103715,"results":"39","hashOfConfig":"26"},{"size":7886,"mtime":1609468130210,"results":"40","hashOfConfig":"26"},{"size":1733,"mtime":1609394689139,"results":"41","hashOfConfig":"26"},{"size":6695,"mtime":1609451908225,"results":"42","hashOfConfig":"26"},{"size":1741,"mtime":1609397086495,"results":"43","hashOfConfig":"26"},{"size":1845,"mtime":1609467627739,"results":"44","hashOfConfig":"26"},{"size":8573,"mtime":1609477605828,"results":"45","hashOfConfig":"26"},{"size":3175,"mtime":1609467722420,"results":"46","hashOfConfig":"26"},{"size":2619,"mtime":1609567631455,"results":"47","hashOfConfig":"26"},{"size":551,"mtime":1609566996653,"results":"48","hashOfConfig":"26"},{"size":2176,"mtime":1609576021666,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"ehr22y",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Planner\\components\\Header\\Header.jsx",[],["102","103"],"C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Planner\\components\\DatePicker\\DatePicker.jsx",[],"C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Planner\\Planner.jsx",[],"C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\index.js",[],"C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\App.js",[],"C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\firebase\\firebase.js",[],"C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\contexts\\AuthContexts.jsx",[],"C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\Routes\\PrivateRoute.jsx",[],"C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Registration\\SignUp.jsx",["104"],"import React, { useRef, useState, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { auth } from '../../firebase/firebase';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\r\nimport { useAuth } from '../../contexts/AuthContexts';\r\nimport ColoredLine from './components/ColoredLine';\r\nimport GoogleButton from 'react-google-button';\r\n\r\nconst useStyles = makeStyles(\r\n    (theme) => ({\r\n        cardDiv: {\r\n            display: 'flex',\r\n            alignSelf: 'center',\r\n            justifyContent: 'center',\r\n            paddingTop: '10%',\r\n            paddingBottom: '7%',\r\n        },\r\n\r\n        signUp: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            minWidth: '300px',\r\n            maxWidth: '80%',\r\n        },\r\n\r\n        card: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyItems: 'center'\r\n        },\r\n\r\n        formControl: {\r\n            minWidth: '20vw'\r\n        },\r\n\r\n        googleButton: {\r\n            paddingTop: '3%',\r\n            alignSelf: 'center',\r\n            paddingBottom: '3%',\r\n        }\r\n    })\r\n)\r\n\r\nexport default function SignUp() {\r\n    const classes = useStyles()\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { signup, signinGoogle } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n        } catch {\r\n            setError('Failed to create an account')\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    async function handleGoogle(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await signinGoogle()\r\n        } catch {\r\n            setError('Failed to sign in')\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        auth\r\n        .getRedirectResult()\r\n        .then((result) => {\r\n            if (result.credential) {\r\n                history.push('/')\r\n            } else {\r\n                setLoading(false);\r\n            }\r\n        }).catch((authError) => {\r\n            console.log(\"Not logged in with Google \", authError)\r\n        });\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n        {loading ? null :\r\n        <div className={classes.cardDiv}>\r\n            <div className={classes.signUp}>\r\n                <Card>\r\n                    <Card.Body className={classes.card}>\r\n                        <h2 className=\"text-center mb-4\">\r\n                            Sign Up\r\n                        </h2>\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group id=\"email\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control className={classes.formControl} type=\"email\" ref={emailRef} required />\r\n                            </Form.Group>\r\n                            <Form.Group id=\"password\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control className={classes.formControl} type=\"password\" ref={passwordRef} required />\r\n                            </Form.Group>\r\n                            <Form.Group id=\"password-confirm\">\r\n                                <Form.Label>Confirm Password</Form.Label>\r\n                                <Form.Control className={classes.formControl} type=\"password\" ref={passwordConfirmRef} required />\r\n                            </Form.Group>\r\n                            <Button disabled={loading} type=\"submit\" className=\"w-100\">\r\n                                Sign up\r\n                                </Button>\r\n                        </Form>\r\n                            <div className = \"w-100 text-center mt-3\">\r\n                                <ColoredLine color=\"gray\"/>\r\n                                or\r\n                            </div>\r\n                            <div  className={classes.googleButton}>\r\n                                <GoogleButton onClick={handleGoogle} />\r\n                            </div>\r\n                    </Card.Body>\r\n                </Card>\r\n                <div className = \"w-100 text-center mt-2\">\r\n                    Already have an account? <Link to=\"/login\">Log In</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        }\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Registration\\Login.jsx",["105"],"import React, { useRef, useState, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { auth } from '../../firebase/firebase';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\r\nimport { useAuth } from '../../contexts/AuthContexts'\r\nimport ColoredLine from './components/ColoredLine';\r\nimport GoogleButton from 'react-google-button';\r\n\r\nconst useStyles = makeStyles(\r\n    (theme) => ({\r\n        mainLayout: {\r\n            display: 'flex',\r\n            alignSelf: 'center',\r\n            justifyContent: 'center',\r\n            paddingTop: '10%',\r\n            paddingBottom: '7%',\r\n        },\r\n\r\n        login: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            minWidth: '300px',\r\n            maxWidth: '80%',\r\n        },\r\n\r\n        formControl: {\r\n            minWidth: '20vw'\r\n        },\r\n\r\n        card: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyItems: 'center'\r\n        },\r\n\r\n        googleButton: {\r\n            paddingTop: '10px',\r\n            alignSelf: 'center',\r\n            paddingBottom: '10px',\r\n        }\r\n\r\n    })\r\n)\r\n\r\nexport default function Login() {\r\n    const { login, signinGoogle } = useAuth()\r\n    const history = useHistory()\r\n    const classes=useStyles()\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        } catch {\r\n            setError('Failed to sign in')\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    async function handleGoogle(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await signinGoogle()\r\n        } catch {\r\n            setError('Failed to sign in')\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        auth\r\n        .getRedirectResult()\r\n        .then((result) => {\r\n            if (result.credential) {\r\n                history.push('/')\r\n            } else {\r\n                setLoading(false);\r\n            }\r\n        }).catch((authError) => {\r\n            console.log(\"Not logged in with Google \", authError)\r\n        });\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n        {loading ? null :\r\n        <div className={classes.mainLayout}>\r\n            <div className={classes.login}>\r\n                <Card>\r\n                    <Card.Body className={classes.card}>\r\n                        <h2 className=\"text-center mb-4\">\r\n                            Log In\r\n                        </h2>\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group id=\"email\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control className={classes.formControl} type=\"email\" ref={emailRef} required />\r\n                            </Form.Group>\r\n                            <Form.Group id=\"password\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control className={classes.formControl} type=\"password\" ref={passwordRef} required />\r\n                            </Form.Group>\r\n                            <Button disabled={loading} type=\"submit\" className=\"w-100\">\r\n                                Log In\r\n                                </Button>\r\n                        </Form>\r\n                            <div className = \"w-100 text-center mt-3\">\r\n                                <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n                            </div>\r\n                            <div className = \"w-100 text-center mt-3\">\r\n                                <ColoredLine color=\"gray\"/>\r\n                                or\r\n                            </div>\r\n                            <div  className={classes.googleButton}>\r\n                                <GoogleButton onClick={handleGoogle} />\r\n                            </div>\r\n                    </Card.Body>\r\n                </Card>\r\n                <div className = \"w-100 text-center mt-2\">\r\n                    Don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        }\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Registration\\ForgotPassword.jsx",[],"C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Registration\\UpdateProfile.jsx",[],"C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Registration\\components\\ColoredLine.jsx",[],"C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Planner\\components\\Cards\\EditEvent\\EditEvent.jsx",[],"C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Planner\\components\\Cards\\EditEvent\\Input.jsx",[],"C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Planner\\components\\CardContainers\\NewTask\\NewTask.jsx",[],"C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Planner\\components\\CardContainers\\NewTask\\Input.jsx",[],"C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Planner\\components\\Cards\\EditEvent\\ColorPicker.jsx",[],"C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Planner\\components\\CardContainers\\CardContainer.jsx",[],"C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Planner\\components\\Cards\\Cards.jsx",[],"C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Planner\\components\\CardContainers\\ContainerContent.jsx",[],"C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\About\\About.jsx",["106"],"import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(\r\n    (theme) => ({\r\n        header: {\r\n            paddingTop: '15px',\r\n            paddingBottom: '15px',\r\n        },\r\n\r\n        bottomParagraph: {\r\n            paddingBottom: '15px',\r\n        },\r\n    })\r\n)\r\n\r\nexport default function About() {\r\n    const classes = useStyles();\r\n    return(\r\n        <>\r\n            <Typography variant='h3' className={classes.header}>\r\n                About\r\n            </Typography>\r\n            <Typography paragraph >\r\n                I love my calendar. But a recurring problem that I have is that\r\n                when tasks become monotonous and I have a repeating event (like\r\n                working out oops 😳) I’ll skip it. “I’ll do it tomorrow,” I say…\r\n                and then I say it again the next day… and the next day… you get\r\n                the point.\r\n            </Typography>\r\n            <Typography paragraph>\r\n                While I think that it is a great idea to have a week-by-week,\r\n                month-by-month schedule for big picture things, what you accomplish\r\n                on a day to day is a much more detailed process. When I’m planning\r\n                my weeks on my calendar app on my phone, I have a habit of filling\r\n                every free spot with something to do, and when that day comes I\r\n                realize that I had forgotten to leave a spot open to eat lunch, or\r\n                take into account a small travel time.\r\n            </Typography>\r\n            <Typography paragraph>\r\n                My hope for Just Do It Tomorrow is that we can all take a\r\n                little more time to plan our tasks day by day for the day\r\n                we want. A big motivator for this idea comes from a lecture\r\n                by Jordan Peterson, included at the bottom. I hope you\r\n                enjoy using this planner, and let me know if you notice any\r\n                bugs, or have suggestions for features!\r\n            </Typography>\r\n            <Typography paragraph className={classes.bottomParagraph}>\r\n                Jonathan\r\n            </Typography>\r\n            <iframe\r\n                width=\"600\"\r\n                height=\"400\"\r\n                src=\"https://www.youtube.com/embed/NLVUXbdqjUw\"\r\n                frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowfullscreen>\r\n            </iframe>\r\n        </>\r\n    )\r\n}","C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\NavBar\\NavBar.jsx",[],"C:\\Users\\jmyeh\\Documents\\Projects\\best-day-generator\\src\\pages\\Suggestions\\Suggestions.jsx",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":100,"column":8,"nodeType":"113","endLine":100,"endColumn":10,"suggestions":"114"},{"ruleId":"111","severity":1,"message":"112","line":98,"column":8,"nodeType":"113","endLine":98,"endColumn":10,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":53,"column":13,"nodeType":"118","endLine":58,"endColumn":33},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["121"],["122"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"123","fix":"125"},"Update the dependencies array to be: [history]",{"range":"126","text":"127"},{"range":"128","text":"127"},[2693,2695],"[history]",[2531,2533]]